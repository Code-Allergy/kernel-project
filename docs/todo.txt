CRITICAL:
blocking processes on events - for ipc, hardware
 - need per process kernel stacks to make sure we return to where we were in the kernel

macro for syscall creation
kernel logging framework, along with being able to use that functionality to create custom character devices for userspace


general:
managed stacks for all kernel modes instead of static (system, irq, svc, abt, und)
ipc to support message passing between processes
memory allocation apis for processes - increase heap size, etc
load dynamic libraries
test context switch performance
other data structures to make things easier
cleaning up dead code and refactoring some others

- better mmu setup, and using sections and domains. sections for kernel mem mapping and we can setup support for larger page sizes for user space OR sections for heap

- heap allocation (user and kernel both need allocators)

- once we have exec and (even faked) direct vfs to fat32 access, make userspace testing program to check for regressions

distant:
- commandline arguments for processes
- signals
